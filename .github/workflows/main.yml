on:
  push:
    branches: [ main ]
defaults:
  run:
    shell: pwsh
jobs:
  pester-test:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - name: 'Run Pester Tests'
        run: |
          function pactl {}
          Invoke-Pester ./PoshPulseAudio.Test.ps1
  run-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Install PSScriptAnalyzer'
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop
      - name: 'Run PSScriptAnalyzer'
        run: |
          Invoke-ScriptAnalyzer -Path *.ps1 -Recurse -Outvariable issues
          $errors = $issues.Where({$_.Severity -eq 'Error'})
          $warnings = $issues.Where({$_.Severity -eq 'Warning'})
          if ($errors) {
              Write-Error "There were $($errors.Count) errors and $($warnings.Count) warnings total." -ErrorAction Stop
          } else {
              Write-Output "There were $($errors.Count) errors and $($warnings.Count) warnings total."
          }
  publish-module:
    needs: [pester-test, run-linter]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish Module to PowerShell Gallery
        uses: pcgeek86/publish-powershell-module-action@v19
        id: publish-module
        with:
          modulePath: PoshPulseAudio
          NuGetApiKey: ${{ secrets.PS_GALLERY_KEY }}